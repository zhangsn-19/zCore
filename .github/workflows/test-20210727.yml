name: Test CI

on:
  push:
  pull_request:
  schedule:
    - cron: '40 3 * * *'  # every day at 3:40

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Pull prebuilt images
        run: git lfs pull -I prebuilt/linux/libc-libos.so,prebuilt/zircon/x64/bringup.zbi,prebuilt/zircon/x64/libzircon-libos.so,prebuilt/zircon/x64/userboot-libos.so
      - name: Prepare rootfs
        run: make rootfs
      - name: Test
        run: cargo test --no-fail-fast
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Copt-level=0 -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Copt-level=0 -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort'
      - name: Cache grcov
        uses: actions/cache@v2
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-grcov
      - name: Gather coverage data
        id: coverage
        uses: actions-rs/grcov@v0.1
#      FIXME: 'error from lcovParse: Failed to parse string'
#      - name: Coveralls upload
#        uses: coverallsapp/github-action@master
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          path-to-lcov: ${{ steps.coverage.outputs.report }}

  bench:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Run benchmarks
        run: cargo bench

  core-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Pull prebuilt images
        run: git lfs pull -I prebuilt/zircon/x64/core-tests.zbi,prebuilt/zircon/x64/libzircon.so,prebuilt/zircon/x64/userboot.so
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-07-27
          components: rust-src
      - name: Install QEMU
        run: |
          sudo apt update
          sudo apt install qemu-system-x86
      - name: Build zCore
        run: cd zCore && make build MODE=release
      - name: Run core-tests
        run: |
          cd scripts
          pip3 install -r requirements.txt
          python3 core-tests.py

  libos-core-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Pull prebuilt images
        run: git lfs pull -I prebuilt/zircon/x64/core-tests.zbi,prebuilt/zircon/x64/libzircon-libos.so,prebuilt/zircon/x64/userboot-libos.so
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-07-27
          components: rust-src
      - name: Run libos-core-tests
        run: |
          cd scripts
          pip3 install -r requirements.txt
          python3 unix-core-tests.py

  libos-libc-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Pull prebuilt images
        run: git lfs pull -I prebuilt/linux/libc-libos.so
      - name: Install musl toolchain
        run: sudo apt-get install musl-tools musl-dev -y
      - name: Prepare rootfs and libc-test
        run: make rootfs && make libc-test
      - name: Run libos-libc-tests
        run: |
          cd scripts
          pip3 install -r requirements.txt
          python3 libos-libc-tests.py
          cat linux/test-result.txt

  baremetal-libc-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-07-27
          components: rust-src
      - name: Pull prebuilt images
        run: git lfs pull -I prebuilt/linux/libc-libos.so
      - name: Install musl toolchain qemu-system-x86
        run: |
          sudo apt-get update
          sudo apt-get install musl-tools musl-dev qemu-system-x86 -y
      - name: Prepare rootfs and libc-test
        run: make baremetal-test-img
      - name: Build kernel
        run: cd zCore && make build MODE=release LINUX=1 ARCH=x86_64
      - name: create qemu disk
        run: cd zCore && make baremetal-qemu-disk MODE=release LINUX=1 ARCH=x86_64
      - name: Run baremetal-libc-test
        run: |
          cd scripts
          python3 ./baremetal-libc-test.py

  baremetal-rv64-oscomp-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-07-27
          components: rust-src, llvm-tools-preview
      - uses: actions-rs/install@v0.1
        with:
          crate: cargo-binutils
          version: latest
      - name: Install cargo tools and qemu-system-riscv64
        run: |
          sudo apt update
          sudo apt install qemu-utils
          wget https://github.com/rcore-os/qemu-prebuilt/releases/download/5.2.0-riscv64/qemu-system-riscv64.tar.xz > /dev/null
          tar xJf qemu-system-riscv64.tar.xz && sudo cp qemu-system-riscv64 /usr/local/bin
          wget https://github.com/rcore-os/qemu-prebuilt/releases/download/qemu-share/qemu-share.tar.xz > /dev/null
          tar xJf qemu-share.tar.xz && sudo cp -r qemu /usr/local/share/
      - name: Prepare rootfs and oscomp
        run: make riscv-image
      - name: Build kernel
        run: cd zCore && make build MODE=release LINUX=1 ARCH=riscv64
      - name: Run baremetal-libc-test
        run: |
          cd scripts
          python3 baremetal-test-riscv64.py
